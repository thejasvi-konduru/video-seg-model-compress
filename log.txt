pretrained : drn_d_22_cityscapes.pth
inference : True
arch : drn_d_22
video_path : mit-driveseg-sample_2.mp4
classes : 19
crop_size : 0
view : True
batch_size : 200
epochs : 14
lr : 0.01
gamma : 0.7
no_cuda : False
seed : 1
bn_sync : False
save_model : True
after model init
originak layers
base.0.0.weight
base.0.1.weight
base.0.1.bias
base.0.1.running_mean
base.0.1.running_var
base.0.1.num_batches_tracked
base.1.0.weight
base.1.1.weight
base.1.1.bias
base.1.1.running_mean
base.1.1.running_var
base.1.1.num_batches_tracked
base.2.0.weight
base.2.1.weight
base.2.1.bias
base.2.1.running_mean
base.2.1.running_var
base.2.1.num_batches_tracked
base.3.0.conv1.weight
base.3.0.bn1.weight
base.3.0.bn1.bias
base.3.0.bn1.running_mean
base.3.0.bn1.running_var
base.3.0.bn1.num_batches_tracked
base.3.0.conv2.weight
base.3.0.bn2.weight
base.3.0.bn2.bias
base.3.0.bn2.running_mean
base.3.0.bn2.running_var
base.3.0.bn2.num_batches_tracked
base.3.0.downsample.0.weight
base.3.0.downsample.1.weight
base.3.0.downsample.1.bias
base.3.0.downsample.1.running_mean
base.3.0.downsample.1.running_var
base.3.0.downsample.1.num_batches_tracked
base.3.1.conv1.weight
base.3.1.bn1.weight
base.3.1.bn1.bias
base.3.1.bn1.running_mean
base.3.1.bn1.running_var
base.3.1.bn1.num_batches_tracked
base.3.1.conv2.weight
base.3.1.bn2.weight
base.3.1.bn2.bias
base.3.1.bn2.running_mean
base.3.1.bn2.running_var
base.3.1.bn2.num_batches_tracked
base.4.0.conv1.weight
base.4.0.bn1.weight
base.4.0.bn1.bias
base.4.0.bn1.running_mean
base.4.0.bn1.running_var
base.4.0.bn1.num_batches_tracked
base.4.0.conv2.weight
base.4.0.bn2.weight
base.4.0.bn2.bias
base.4.0.bn2.running_mean
base.4.0.bn2.running_var
base.4.0.bn2.num_batches_tracked
base.4.0.downsample.0.weight
base.4.0.downsample.1.weight
base.4.0.downsample.1.bias
base.4.0.downsample.1.running_mean
base.4.0.downsample.1.running_var
base.4.0.downsample.1.num_batches_tracked
base.4.1.conv1.weight
base.4.1.bn1.weight
base.4.1.bn1.bias
base.4.1.bn1.running_mean
base.4.1.bn1.running_var
base.4.1.bn1.num_batches_tracked
base.4.1.conv2.weight
base.4.1.bn2.weight
base.4.1.bn2.bias
base.4.1.bn2.running_mean
base.4.1.bn2.running_var
base.4.1.bn2.num_batches_tracked
base.5.0.conv1.weight
base.5.0.bn1.weight
base.5.0.bn1.bias
base.5.0.bn1.running_mean
base.5.0.bn1.running_var
base.5.0.bn1.num_batches_tracked
base.5.0.conv2.weight
base.5.0.bn2.weight
base.5.0.bn2.bias
base.5.0.bn2.running_mean
base.5.0.bn2.running_var
base.5.0.bn2.num_batches_tracked
base.5.0.downsample.0.weight
base.5.0.downsample.1.weight
base.5.0.downsample.1.bias
base.5.0.downsample.1.running_mean
base.5.0.downsample.1.running_var
base.5.0.downsample.1.num_batches_tracked
base.5.1.conv1.weight
base.5.1.bn1.weight
base.5.1.bn1.bias
base.5.1.bn1.running_mean
base.5.1.bn1.running_var
base.5.1.bn1.num_batches_tracked
base.5.1.conv2.weight
base.5.1.bn2.weight
base.5.1.bn2.bias
base.5.1.bn2.running_mean
base.5.1.bn2.running_var
base.5.1.bn2.num_batches_tracked
base.6.0.conv1.weight
base.6.0.bn1.weight
base.6.0.bn1.bias
base.6.0.bn1.running_mean
base.6.0.bn1.running_var
base.6.0.bn1.num_batches_tracked
base.6.0.conv2.weight
base.6.0.bn2.weight
base.6.0.bn2.bias
base.6.0.bn2.running_mean
base.6.0.bn2.running_var
base.6.0.bn2.num_batches_tracked
base.6.0.downsample.0.weight
base.6.0.downsample.1.weight
base.6.0.downsample.1.bias
base.6.0.downsample.1.running_mean
base.6.0.downsample.1.running_var
base.6.0.downsample.1.num_batches_tracked
base.6.1.conv1.weight
base.6.1.bn1.weight
base.6.1.bn1.bias
base.6.1.bn1.running_mean
base.6.1.bn1.running_var
base.6.1.bn1.num_batches_tracked
base.6.1.conv2.weight
base.6.1.bn2.weight
base.6.1.bn2.bias
base.6.1.bn2.running_mean
base.6.1.bn2.running_var
base.6.1.bn2.num_batches_tracked
base.7.0.weight
base.7.1.weight
base.7.1.bias
base.7.1.running_mean
base.7.1.running_var
base.7.1.num_batches_tracked
base.8.0.weight
base.8.1.weight
base.8.1.bias
base.8.1.running_mean
base.8.1.running_var
base.8.1.num_batches_tracked
seg.weight
seg.bias
up.weight
DRNSeg(
  (base): Sequential(
    (0): Sequential(
      (0): Conv2d(3, 16, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (2): Sequential(
      (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (5): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (6): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (7): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (8): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
  (softmax): LogSoftmax(dim=None)
  (up): ConvTranspose2d(19, 19, kernel_size=(16, 16), stride=(8, 8), padding=(4, 4), groups=19, bias=False)
)